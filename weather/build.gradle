apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 28
  defaultConfig {
    applicationId "com.nicholasdoglio.weather"
    minSdkVersion 21
    targetSdkVersion 28
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }
  buildTypes {
    def apiKeysFile = rootProject.file("api.properties")
    def apiKeys = new Properties()
    if (apiKeysFile.exists()) apiKeys.load(new FileInputStream(apiKeysFile))

    all {
      manifestPlaceholders = [PLAY_KEY: apiKeys.getProperty('places_key', 'null')]
      buildConfigField 'String', 'WEATHER_API_KEY', apiKeys.getProperty('weather_key', 'null')
    }

    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

androidExtensions {
  experimental = true
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.11"
  implementation "com.squareup.retrofit2:retrofit:2.5.0"
  implementation "com.squareup.retrofit2:converter-moshi:2.5.0"
  implementation "com.squareup.retrofit2:adapter-rxjava2:2.5.0"
  implementation "io.reactivex.rxjava2:rxkotlin:2.3.0"
  implementation "io.reactivex.rxjava2:rxjava:2.2.4"
  implementation "io.reactivex.rxjava2:rxandroid:2.1.0"
  implementation 'androidx.appcompat:appcompat:1.0.2'
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation 'androidx.recyclerview:recyclerview:1.0.0'
  implementation 'com.google.android.material:material:1.0.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation 'androidx.core:core-ktx:1.0.1'
  implementation 'androidx.fragment:fragment-ktx:1.0.0'
  implementation "com.google.dagger:dagger:2.19"
  implementation "com.google.dagger:dagger-android:2.19"
  implementation "com.google.dagger:dagger-android-support:2.19"
  implementation "com.jakewharton.timber:timber:4.7.1"
  implementation "com.google.android.gms:play-services-places:16.0.0"
  implementation "com.airbnb.android:epoxy:3.0.0"
  implementation 'androidx.room:room-runtime:2.0.0'
  implementation 'androidx.room:room-rxjava2:2.0.0'
  implementation "com.squareup.okhttp3:logging-interceptor:3.12.0"
  implementation "com.squareup.okhttp3:okhttp:3.12.0"
  implementation "com.jakewharton.threetenabp:threetenabp:1.1.1"
  implementation "com.squareup.moshi:moshi:1.8.0"
  debugImplementation "com.squareup.leakcanary:leakcanary-android:1.6.2"
  releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:1.6.2"

  kapt "com.airbnb.android:epoxy-processor:3.0.0"
  kapt "com.squareup.moshi:moshi-kotlin-codegen:1.8.0"
  kapt 'androidx.room:room-compiler:2.0.0'
  kapt "com.google.dagger:dagger-compiler:2.19"
  kapt "com.google.dagger:dagger-android-processor:2.19"

  testImplementation "junit:junit:4.12"
  testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.3.11"
  testImplementation "io.mockk:mockk:1.8.13.kotlin13"
  testImplementation "com.squareup.retrofit2:retrofit-mock:2.5.0"

  androidTestImplementation 'androidx.test:rules:1.1.0'
  androidTestImplementation 'androidx.test:runner:1.1.0'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

// Ensure the no-op dependency is always used in JVM tests.
configurations.all { config ->
  if (config.name.contains('UnitTest')) {
    config.resolutionStrategy.eachDependency { details ->
      if (details.requested.group == 'com.squareup.leakcanary' &&
          details.requested.name ==
          'leakcanary-android') {
        details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op',
            version: details.requested.version)
      }
    }
  }
}
